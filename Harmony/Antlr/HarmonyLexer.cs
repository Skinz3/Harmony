//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Skinz\Desktop\Harmony\Harmony.Antlr\HarmonyLexer.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class HarmonyLexer : Lexer {
	public const int
		UNIT=1, NOTE=2, CHORD=3, ATR_NAME=4, ATR_TEMPO=5, ATR_DURATION=6, ATR_AUTHOR=7, 
		LPAREN=8, RPAREN=9, LBRACE=10, RBRACE=11, COMMA=12, DOT=13, SEMI=14, COLON=15, 
		SHARP=16, WS=17, IDENTIFIER=18, DECIMAL_LITERAL=19, FLOAT_LITERAL=20;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"UNIT", "NOTE", "CHORD", "ATR_NAME", "ATR_TEMPO", "ATR_DURATION", "ATR_AUTHOR", 
		"LPAREN", "RPAREN", "LBRACE", "RBRACE", "COMMA", "DOT", "SEMI", "COLON", 
		"SHARP", "WS", "IDENTIFIER", "DECIMAL_LITERAL", "FLOAT_LITERAL", "Digits", 
		"LetterOrDigit", "Letter"
	};


	public HarmonyLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'unit'", "'note'", "'chord'", "'Name'", "'Tempo'", "'Duration'", 
		"'Author'", "'('", "')'", "'{'", "'}'", "','", "'.'", "';'", "':'", "'#'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "UNIT", "NOTE", "CHORD", "ATR_NAME", "ATR_TEMPO", "ATR_DURATION", 
		"ATR_AUTHOR", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "COMMA", "DOT", 
		"SEMI", "COLON", "SHARP", "WS", "IDENTIFIER", "DECIMAL_LITERAL", "FLOAT_LITERAL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "HarmonyLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x16\xAA\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x3\x2\x3\x2\x3\x2\x3\x2"+
		"\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6"+
		"\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b"+
		"\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3"+
		"\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x6\x12p\n\x12\r\x12"+
		"\xE\x12q\x3\x12\x3\x12\x3\x13\x3\x13\x5\x13x\n\x13\x3\x13\a\x13{\n\x13"+
		"\f\x13\xE\x13~\v\x13\x3\x14\x3\x14\x3\x14\x5\x14\x83\n\x14\x3\x14\x6\x14"+
		"\x86\n\x14\r\x14\xE\x14\x87\x3\x14\x5\x14\x8B\n\x14\x5\x14\x8D\n\x14\x3"+
		"\x14\x5\x14\x90\n\x14\x3\x15\x3\x15\x3\x15\x5\x15\x95\n\x15\x3\x15\x3"+
		"\x15\x5\x15\x99\n\x15\x3\x16\x3\x16\a\x16\x9D\n\x16\f\x16\xE\x16\xA0\v"+
		"\x16\x3\x16\x5\x16\xA3\n\x16\x3\x17\x3\x17\x5\x17\xA7\n\x17\x3\x18\x3"+
		"\x18\x2\x2\x2\x19\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2"+
		"\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10"+
		"\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x2-\x2\x2/\x2"+
		"\x2\x3\x2\b\x5\x2\v\f\xE\xF\"\"\x3\x2\x33;\x4\x2NNnn\x3\x2\x32;\x4\x2"+
		"\x32;\x61\x61\x6\x2&&\x43\\\x61\x61\x63|\xB3\x2\x3\x3\x2\x2\x2\x2\x5\x3"+
		"\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2"+
		"\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15"+
		"\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2"+
		"\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2"+
		"\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x3\x31\x3\x2\x2\x2\x5"+
		"\x36\x3\x2\x2\x2\a;\x3\x2\x2\x2\t\x41\x3\x2\x2\x2\v\x46\x3\x2\x2\x2\r"+
		"L\x3\x2\x2\x2\xFU\x3\x2\x2\x2\x11\\\x3\x2\x2\x2\x13^\x3\x2\x2\x2\x15`"+
		"\x3\x2\x2\x2\x17\x62\x3\x2\x2\x2\x19\x64\x3\x2\x2\x2\x1B\x66\x3\x2\x2"+
		"\x2\x1Dh\x3\x2\x2\x2\x1Fj\x3\x2\x2\x2!l\x3\x2\x2\x2#o\x3\x2\x2\x2%u\x3"+
		"\x2\x2\x2\'\x8C\x3\x2\x2\x2)\x98\x3\x2\x2\x2+\x9A\x3\x2\x2\x2-\xA6\x3"+
		"\x2\x2\x2/\xA8\x3\x2\x2\x2\x31\x32\aw\x2\x2\x32\x33\ap\x2\x2\x33\x34\a"+
		"k\x2\x2\x34\x35\av\x2\x2\x35\x4\x3\x2\x2\x2\x36\x37\ap\x2\x2\x37\x38\a"+
		"q\x2\x2\x38\x39\av\x2\x2\x39:\ag\x2\x2:\x6\x3\x2\x2\x2;<\a\x65\x2\x2<"+
		"=\aj\x2\x2=>\aq\x2\x2>?\at\x2\x2?@\a\x66\x2\x2@\b\x3\x2\x2\x2\x41\x42"+
		"\aP\x2\x2\x42\x43\a\x63\x2\x2\x43\x44\ao\x2\x2\x44\x45\ag\x2\x2\x45\n"+
		"\x3\x2\x2\x2\x46G\aV\x2\x2GH\ag\x2\x2HI\ao\x2\x2IJ\ar\x2\x2JK\aq\x2\x2"+
		"K\f\x3\x2\x2\x2LM\a\x46\x2\x2MN\aw\x2\x2NO\at\x2\x2OP\a\x63\x2\x2PQ\a"+
		"v\x2\x2QR\ak\x2\x2RS\aq\x2\x2ST\ap\x2\x2T\xE\x3\x2\x2\x2UV\a\x43\x2\x2"+
		"VW\aw\x2\x2WX\av\x2\x2XY\aj\x2\x2YZ\aq\x2\x2Z[\at\x2\x2[\x10\x3\x2\x2"+
		"\x2\\]\a*\x2\x2]\x12\x3\x2\x2\x2^_\a+\x2\x2_\x14\x3\x2\x2\x2`\x61\a}\x2"+
		"\x2\x61\x16\x3\x2\x2\x2\x62\x63\a\x7F\x2\x2\x63\x18\x3\x2\x2\x2\x64\x65"+
		"\a.\x2\x2\x65\x1A\x3\x2\x2\x2\x66g\a\x30\x2\x2g\x1C\x3\x2\x2\x2hi\a=\x2"+
		"\x2i\x1E\x3\x2\x2\x2jk\a<\x2\x2k \x3\x2\x2\x2lm\a%\x2\x2m\"\x3\x2\x2\x2"+
		"np\t\x2\x2\x2on\x3\x2\x2\x2pq\x3\x2\x2\x2qo\x3\x2\x2\x2qr\x3\x2\x2\x2"+
		"rs\x3\x2\x2\x2st\b\x12\x2\x2t$\x3\x2\x2\x2uw\x5/\x18\x2vx\x5!\x11\x2w"+
		"v\x3\x2\x2\x2wx\x3\x2\x2\x2x|\x3\x2\x2\x2y{\x5-\x17\x2zy\x3\x2\x2\x2{"+
		"~\x3\x2\x2\x2|z\x3\x2\x2\x2|}\x3\x2\x2\x2}&\x3\x2\x2\x2~|\x3\x2\x2\x2"+
		"\x7F\x8D\a\x32\x2\x2\x80\x8A\t\x3\x2\x2\x81\x83\x5+\x16\x2\x82\x81\x3"+
		"\x2\x2\x2\x82\x83\x3\x2\x2\x2\x83\x8B\x3\x2\x2\x2\x84\x86\a\x61\x2\x2"+
		"\x85\x84\x3\x2\x2\x2\x86\x87\x3\x2\x2\x2\x87\x85\x3\x2\x2\x2\x87\x88\x3"+
		"\x2\x2\x2\x88\x89\x3\x2\x2\x2\x89\x8B\x5+\x16\x2\x8A\x82\x3\x2\x2\x2\x8A"+
		"\x85\x3\x2\x2\x2\x8B\x8D\x3\x2\x2\x2\x8C\x7F\x3\x2\x2\x2\x8C\x80\x3\x2"+
		"\x2\x2\x8D\x8F\x3\x2\x2\x2\x8E\x90\t\x4\x2\x2\x8F\x8E\x3\x2\x2\x2\x8F"+
		"\x90\x3\x2\x2\x2\x90(\x3\x2\x2\x2\x91\x92\x5+\x16\x2\x92\x94\a\x30\x2"+
		"\x2\x93\x95\x5+\x16\x2\x94\x93\x3\x2\x2\x2\x94\x95\x3\x2\x2\x2\x95\x99"+
		"\x3\x2\x2\x2\x96\x97\a\x30\x2\x2\x97\x99\x5+\x16\x2\x98\x91\x3\x2\x2\x2"+
		"\x98\x96\x3\x2\x2\x2\x99*\x3\x2\x2\x2\x9A\xA2\t\x5\x2\x2\x9B\x9D\t\x6"+
		"\x2\x2\x9C\x9B\x3\x2\x2\x2\x9D\xA0\x3\x2\x2\x2\x9E\x9C\x3\x2\x2\x2\x9E"+
		"\x9F\x3\x2\x2\x2\x9F\xA1\x3\x2\x2\x2\xA0\x9E\x3\x2\x2\x2\xA1\xA3\t\x5"+
		"\x2\x2\xA2\x9E\x3\x2\x2\x2\xA2\xA3\x3\x2\x2\x2\xA3,\x3\x2\x2\x2\xA4\xA7"+
		"\x5/\x18\x2\xA5\xA7\t\x5\x2\x2\xA6\xA4\x3\x2\x2\x2\xA6\xA5\x3\x2\x2\x2"+
		"\xA7.\x3\x2\x2\x2\xA8\xA9\t\a\x2\x2\xA9\x30\x3\x2\x2\x2\x10\x2qw|\x82"+
		"\x87\x8A\x8C\x8F\x94\x98\x9E\xA2\xA6\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
