//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Skinz\Desktop\Harmony\Harmony.Antlr\HarmonyLexer.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class HarmonyLexer : Lexer {
	public const int
		UNIT=1, NOTE=2, CHORD=3, ATR_NAME=4, ATR_TEMPO=5, ATR_DURATION=6, ATR_AUTHOR=7, 
		TRANSPOSE=8, PROPAGATE=9, ARPEGGIATE=10, LPAREN=11, RPAREN=12, LBRACE=13, 
		RBRACE=14, COMMA=15, DOT=16, SEMI=17, COLON=18, SHARP=19, FUNC=20, WS=21, 
		IDENTIFIER=22, DECIMAL_LITERAL=23, FLOAT_LITERAL=24;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"UNIT", "NOTE", "CHORD", "ATR_NAME", "ATR_TEMPO", "ATR_DURATION", "ATR_AUTHOR", 
		"TRANSPOSE", "PROPAGATE", "ARPEGGIATE", "LPAREN", "RPAREN", "LBRACE", 
		"RBRACE", "COMMA", "DOT", "SEMI", "COLON", "SHARP", "FUNC", "WS", "IDENTIFIER", 
		"DECIMAL_LITERAL", "FLOAT_LITERAL", "Digits", "LetterOrDigit", "Letter"
	};


	public HarmonyLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'unit'", "'note'", "'chord'", "'name'", "'tempo'", "'duration'", 
		"'author'", "'transpose'", "'propagate'", "'arpeggiate'", "'('", "')'", 
		"'{'", "'}'", "','", "'.'", "';'", "':'", "'#'", "'->'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "UNIT", "NOTE", "CHORD", "ATR_NAME", "ATR_TEMPO", "ATR_DURATION", 
		"ATR_AUTHOR", "TRANSPOSE", "PROPAGATE", "ARPEGGIATE", "LPAREN", "RPAREN", 
		"LBRACE", "RBRACE", "COMMA", "DOT", "SEMI", "COLON", "SHARP", "FUNC", 
		"WS", "IDENTIFIER", "DECIMAL_LITERAL", "FLOAT_LITERAL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "HarmonyLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1A\xDB\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5"+
		"\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3"+
		"\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3"+
		"\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3"+
		"\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3"+
		"\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3"+
		"\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3"+
		"\x16\x6\x16\x9A\n\x16\r\x16\xE\x16\x9B\x3\x16\x3\x16\x3\x17\x3\x17\x5"+
		"\x17\xA2\n\x17\x3\x17\a\x17\xA5\n\x17\f\x17\xE\x17\xA8\v\x17\x3\x18\x5"+
		"\x18\xAB\n\x18\x3\x18\x3\x18\x3\x18\x5\x18\xB0\n\x18\x3\x18\x6\x18\xB3"+
		"\n\x18\r\x18\xE\x18\xB4\x3\x18\x5\x18\xB8\n\x18\x5\x18\xBA\n\x18\x3\x18"+
		"\x5\x18\xBD\n\x18\x3\x19\x3\x19\x3\x19\x5\x19\xC2\n\x19\x3\x19\x3\x19"+
		"\x5\x19\xC6\n\x19\x3\x1A\x3\x1A\a\x1A\xCA\n\x1A\f\x1A\xE\x1A\xCD\v\x1A"+
		"\x3\x1A\x5\x1A\xD0\n\x1A\x3\x1B\x3\x1B\x5\x1B\xD4\n\x1B\x3\x1C\x3\x1C"+
		"\x3\x1C\x3\x1C\x5\x1C\xDA\n\x1C\x2\x2\x2\x1D\x3\x2\x3\x5\x2\x4\a\x2\x5"+
		"\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19"+
		"\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15"+
		")\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x2\x35\x2\x2\x37\x2"+
		"\x2\x3\x2\v\x5\x2\v\f\xE\xF\"\"\x3\x2\x33;\x4\x2NNnn\x3\x2\x32;\x4\x2"+
		"\x32;\x61\x61\x6\x2&&\x43\\\x61\x61\x63|\x4\x2\x2\x81\xD802\xDC01\x3\x2"+
		"\xD802\xDC01\x3\x2\xDC02\xE001\xE7\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2"+
		"\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2"+
		"\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2"+
		"\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3"+
		"\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2"+
		"\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2"+
		"\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x3\x39\x3\x2\x2\x2\x5>\x3\x2\x2\x2"+
		"\a\x43\x3\x2\x2\x2\tI\x3\x2\x2\x2\vN\x3\x2\x2\x2\rT\x3\x2\x2\x2\xF]\x3"+
		"\x2\x2\x2\x11\x64\x3\x2\x2\x2\x13n\x3\x2\x2\x2\x15x\x3\x2\x2\x2\x17\x83"+
		"\x3\x2\x2\x2\x19\x85\x3\x2\x2\x2\x1B\x87\x3\x2\x2\x2\x1D\x89\x3\x2\x2"+
		"\x2\x1F\x8B\x3\x2\x2\x2!\x8D\x3\x2\x2\x2#\x8F\x3\x2\x2\x2%\x91\x3\x2\x2"+
		"\x2\'\x93\x3\x2\x2\x2)\x95\x3\x2\x2\x2+\x99\x3\x2\x2\x2-\x9F\x3\x2\x2"+
		"\x2/\xAA\x3\x2\x2\x2\x31\xC5\x3\x2\x2\x2\x33\xC7\x3\x2\x2\x2\x35\xD3\x3"+
		"\x2\x2\x2\x37\xD9\x3\x2\x2\x2\x39:\aw\x2\x2:;\ap\x2\x2;<\ak\x2\x2<=\a"+
		"v\x2\x2=\x4\x3\x2\x2\x2>?\ap\x2\x2?@\aq\x2\x2@\x41\av\x2\x2\x41\x42\a"+
		"g\x2\x2\x42\x6\x3\x2\x2\x2\x43\x44\a\x65\x2\x2\x44\x45\aj\x2\x2\x45\x46"+
		"\aq\x2\x2\x46G\at\x2\x2GH\a\x66\x2\x2H\b\x3\x2\x2\x2IJ\ap\x2\x2JK\a\x63"+
		"\x2\x2KL\ao\x2\x2LM\ag\x2\x2M\n\x3\x2\x2\x2NO\av\x2\x2OP\ag\x2\x2PQ\a"+
		"o\x2\x2QR\ar\x2\x2RS\aq\x2\x2S\f\x3\x2\x2\x2TU\a\x66\x2\x2UV\aw\x2\x2"+
		"VW\at\x2\x2WX\a\x63\x2\x2XY\av\x2\x2YZ\ak\x2\x2Z[\aq\x2\x2[\\\ap\x2\x2"+
		"\\\xE\x3\x2\x2\x2]^\a\x63\x2\x2^_\aw\x2\x2_`\av\x2\x2`\x61\aj\x2\x2\x61"+
		"\x62\aq\x2\x2\x62\x63\at\x2\x2\x63\x10\x3\x2\x2\x2\x64\x65\av\x2\x2\x65"+
		"\x66\at\x2\x2\x66g\a\x63\x2\x2gh\ap\x2\x2hi\au\x2\x2ij\ar\x2\x2jk\aq\x2"+
		"\x2kl\au\x2\x2lm\ag\x2\x2m\x12\x3\x2\x2\x2no\ar\x2\x2op\at\x2\x2pq\aq"+
		"\x2\x2qr\ar\x2\x2rs\a\x63\x2\x2st\ai\x2\x2tu\a\x63\x2\x2uv\av\x2\x2vw"+
		"\ag\x2\x2w\x14\x3\x2\x2\x2xy\a\x63\x2\x2yz\at\x2\x2z{\ar\x2\x2{|\ag\x2"+
		"\x2|}\ai\x2\x2}~\ai\x2\x2~\x7F\ak\x2\x2\x7F\x80\a\x63\x2\x2\x80\x81\a"+
		"v\x2\x2\x81\x82\ag\x2\x2\x82\x16\x3\x2\x2\x2\x83\x84\a*\x2\x2\x84\x18"+
		"\x3\x2\x2\x2\x85\x86\a+\x2\x2\x86\x1A\x3\x2\x2\x2\x87\x88\a}\x2\x2\x88"+
		"\x1C\x3\x2\x2\x2\x89\x8A\a\x7F\x2\x2\x8A\x1E\x3\x2\x2\x2\x8B\x8C\a.\x2"+
		"\x2\x8C \x3\x2\x2\x2\x8D\x8E\a\x30\x2\x2\x8E\"\x3\x2\x2\x2\x8F\x90\a="+
		"\x2\x2\x90$\x3\x2\x2\x2\x91\x92\a<\x2\x2\x92&\x3\x2\x2\x2\x93\x94\a%\x2"+
		"\x2\x94(\x3\x2\x2\x2\x95\x96\a/\x2\x2\x96\x97\a@\x2\x2\x97*\x3\x2\x2\x2"+
		"\x98\x9A\t\x2\x2\x2\x99\x98\x3\x2\x2\x2\x9A\x9B\x3\x2\x2\x2\x9B\x99\x3"+
		"\x2\x2\x2\x9B\x9C\x3\x2\x2\x2\x9C\x9D\x3\x2\x2\x2\x9D\x9E\b\x16\x2\x2"+
		"\x9E,\x3\x2\x2\x2\x9F\xA1\x5\x37\x1C\x2\xA0\xA2\x5\'\x14\x2\xA1\xA0\x3"+
		"\x2\x2\x2\xA1\xA2\x3\x2\x2\x2\xA2\xA6\x3\x2\x2\x2\xA3\xA5\x5\x35\x1B\x2"+
		"\xA4\xA3\x3\x2\x2\x2\xA5\xA8\x3\x2\x2\x2\xA6\xA4\x3\x2\x2\x2\xA6\xA7\x3"+
		"\x2\x2\x2\xA7.\x3\x2\x2\x2\xA8\xA6\x3\x2\x2\x2\xA9\xAB\a/\x2\x2\xAA\xA9"+
		"\x3\x2\x2\x2\xAA\xAB\x3\x2\x2\x2\xAB\xB9\x3\x2\x2\x2\xAC\xBA\a\x32\x2"+
		"\x2\xAD\xB7\t\x3\x2\x2\xAE\xB0\x5\x33\x1A\x2\xAF\xAE\x3\x2\x2\x2\xAF\xB0"+
		"\x3\x2\x2\x2\xB0\xB8\x3\x2\x2\x2\xB1\xB3\a\x61\x2\x2\xB2\xB1\x3\x2\x2"+
		"\x2\xB3\xB4\x3\x2\x2\x2\xB4\xB2\x3\x2\x2\x2\xB4\xB5\x3\x2\x2\x2\xB5\xB6"+
		"\x3\x2\x2\x2\xB6\xB8\x5\x33\x1A\x2\xB7\xAF\x3\x2\x2\x2\xB7\xB2\x3\x2\x2"+
		"\x2\xB8\xBA\x3\x2\x2\x2\xB9\xAC\x3\x2\x2\x2\xB9\xAD\x3\x2\x2\x2\xBA\xBC"+
		"\x3\x2\x2\x2\xBB\xBD\t\x4\x2\x2\xBC\xBB\x3\x2\x2\x2\xBC\xBD\x3\x2\x2\x2"+
		"\xBD\x30\x3\x2\x2\x2\xBE\xBF\x5\x33\x1A\x2\xBF\xC1\a\x30\x2\x2\xC0\xC2"+
		"\x5\x33\x1A\x2\xC1\xC0\x3\x2\x2\x2\xC1\xC2\x3\x2\x2\x2\xC2\xC6\x3\x2\x2"+
		"\x2\xC3\xC4\a\x30\x2\x2\xC4\xC6\x5\x33\x1A\x2\xC5\xBE\x3\x2\x2\x2\xC5"+
		"\xC3\x3\x2\x2\x2\xC6\x32\x3\x2\x2\x2\xC7\xCF\t\x5\x2\x2\xC8\xCA\t\x6\x2"+
		"\x2\xC9\xC8\x3\x2\x2\x2\xCA\xCD\x3\x2\x2\x2\xCB\xC9\x3\x2\x2\x2\xCB\xCC"+
		"\x3\x2\x2\x2\xCC\xCE\x3\x2\x2\x2\xCD\xCB\x3\x2\x2\x2\xCE\xD0\t\x5\x2\x2"+
		"\xCF\xCB\x3\x2\x2\x2\xCF\xD0\x3\x2\x2\x2\xD0\x34\x3\x2\x2\x2\xD1\xD4\x5"+
		"\x37\x1C\x2\xD2\xD4\t\x5\x2\x2\xD3\xD1\x3\x2\x2\x2\xD3\xD2\x3\x2\x2\x2"+
		"\xD4\x36\x3\x2\x2\x2\xD5\xDA\t\a\x2\x2\xD6\xDA\n\b\x2\x2\xD7\xD8\t\t\x2"+
		"\x2\xD8\xDA\t\n\x2\x2\xD9\xD5\x3\x2\x2\x2\xD9\xD6\x3\x2\x2\x2\xD9\xD7"+
		"\x3\x2\x2\x2\xDA\x38\x3\x2\x2\x2\x12\x2\x9B\xA1\xA6\xAA\xAF\xB4\xB7\xB9"+
		"\xBC\xC1\xC5\xCB\xCF\xD3\xD9\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
