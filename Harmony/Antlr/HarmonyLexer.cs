//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Skinz\Desktop\Harmony\Harmony.Antlr\HarmonyLexer.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class HarmonyLexer : Lexer {
	public const int
		UNIT=1, ATR_NAME=2, ATR_TEMPO=3, ATR_AUTHOR=4, NOTE=5, CHORD=6, STEP=7, 
		TRANSPOSE=8, PROPAGATE=9, STRUM=10, TIMES=11, BASS=12, LPAREN=13, RPAREN=14, 
		LBRACE=15, RBRACE=16, COMMA=17, DOT=18, SEMI=19, COLON=20, SHARP=21, LBRACKET=22, 
		RBRACKET=23, WS=24, COMMENT=25, LINE_COMMENT=26, IDENTIFIER=27, DECIMAL_LITERAL=28, 
		FLOAT_LITERAL=29;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"UNIT", "ATR_NAME", "ATR_TEMPO", "ATR_AUTHOR", "NOTE", "CHORD", "STEP", 
		"TRANSPOSE", "PROPAGATE", "STRUM", "TIMES", "BASS", "LPAREN", "RPAREN", 
		"LBRACE", "RBRACE", "COMMA", "DOT", "SEMI", "COLON", "SHARP", "LBRACKET", 
		"RBRACKET", "WS", "COMMENT", "LINE_COMMENT", "IDENTIFIER", "DECIMAL_LITERAL", 
		"FLOAT_LITERAL", "Digits", "LetterOrDigit", "Letter"
	};


	public HarmonyLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'unit'", "'name'", "'tempo'", "'author'", "'note'", "'chord'", 
		"'step'", "'transpose'", "'propagate'", "'strum'", "'times'", "'bass'", 
		"'('", "')'", "'{'", "'}'", "','", "'.'", "';'", "':'", "'#'", "'['", 
		"']'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "UNIT", "ATR_NAME", "ATR_TEMPO", "ATR_AUTHOR", "NOTE", "CHORD", 
		"STEP", "TRANSPOSE", "PROPAGATE", "STRUM", "TIMES", "BASS", "LPAREN", 
		"RPAREN", "LBRACE", "RBRACE", "COMMA", "DOT", "SEMI", "COLON", "SHARP", 
		"LBRACKET", "RBRACKET", "WS", "COMMENT", "LINE_COMMENT", "IDENTIFIER", 
		"DECIMAL_LITERAL", "FLOAT_LITERAL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "HarmonyLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1F\x101\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3"+
		"\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a"+
		"\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t"+
		"\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v"+
		"\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r"+
		"\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3"+
		"\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3"+
		"\x18\x3\x18\x3\x19\x6\x19\xA7\n\x19\r\x19\xE\x19\xA8\x3\x19\x3\x19\x3"+
		"\x1A\x3\x1A\x3\x1A\x3\x1A\a\x1A\xB1\n\x1A\f\x1A\xE\x1A\xB4\v\x1A\x3\x1A"+
		"\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\a\x1B\xBF\n\x1B"+
		"\f\x1B\xE\x1B\xC2\v\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x5\x1C\xC8\n\x1C\x3"+
		"\x1C\a\x1C\xCB\n\x1C\f\x1C\xE\x1C\xCE\v\x1C\x3\x1D\x5\x1D\xD1\n\x1D\x3"+
		"\x1D\x3\x1D\x3\x1D\x5\x1D\xD6\n\x1D\x3\x1D\x6\x1D\xD9\n\x1D\r\x1D\xE\x1D"+
		"\xDA\x3\x1D\x5\x1D\xDE\n\x1D\x5\x1D\xE0\n\x1D\x3\x1D\x5\x1D\xE3\n\x1D"+
		"\x3\x1E\x3\x1E\x3\x1E\x5\x1E\xE8\n\x1E\x3\x1E\x3\x1E\x5\x1E\xEC\n\x1E"+
		"\x3\x1F\x3\x1F\a\x1F\xF0\n\x1F\f\x1F\xE\x1F\xF3\v\x1F\x3\x1F\x5\x1F\xF6"+
		"\n\x1F\x3 \x3 \x5 \xFA\n \x3!\x3!\x3!\x3!\x5!\x100\n!\x3\xB2\x2\x2\"\x3"+
		"\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2"+
		"\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12"+
		"#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33"+
		"\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2\x2?\x2\x2\x41\x2"+
		"\x2\x3\x2\f\x5\x2\v\f\xE\xF\"\"\x4\x2\f\f\xF\xF\x3\x2\x33;\x4\x2NNnn\x3"+
		"\x2\x32;\x4\x2\x32;\x61\x61\x6\x2&&\x43\\\x61\x61\x63|\x4\x2\x2\x81\xD802"+
		"\xDC01\x3\x2\xD802\xDC01\x3\x2\xDC02\xE001\x10F\x2\x3\x3\x2\x2\x2\x2\x5"+
		"\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3"+
		"\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15"+
		"\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2"+
		"\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2"+
		"\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-"+
		"\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2"+
		"\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2"+
		"\x3\x43\x3\x2\x2\x2\x5H\x3\x2\x2\x2\aM\x3\x2\x2\x2\tS\x3\x2\x2\x2\vZ\x3"+
		"\x2\x2\x2\r_\x3\x2\x2\x2\xF\x65\x3\x2\x2\x2\x11j\x3\x2\x2\x2\x13t\x3\x2"+
		"\x2\x2\x15~\x3\x2\x2\x2\x17\x84\x3\x2\x2\x2\x19\x8A\x3\x2\x2\x2\x1B\x8F"+
		"\x3\x2\x2\x2\x1D\x91\x3\x2\x2\x2\x1F\x93\x3\x2\x2\x2!\x95\x3\x2\x2\x2"+
		"#\x97\x3\x2\x2\x2%\x99\x3\x2\x2\x2\'\x9B\x3\x2\x2\x2)\x9D\x3\x2\x2\x2"+
		"+\x9F\x3\x2\x2\x2-\xA1\x3\x2\x2\x2/\xA3\x3\x2\x2\x2\x31\xA6\x3\x2\x2\x2"+
		"\x33\xAC\x3\x2\x2\x2\x35\xBA\x3\x2\x2\x2\x37\xC5\x3\x2\x2\x2\x39\xD0\x3"+
		"\x2\x2\x2;\xEB\x3\x2\x2\x2=\xED\x3\x2\x2\x2?\xF9\x3\x2\x2\x2\x41\xFF\x3"+
		"\x2\x2\x2\x43\x44\aw\x2\x2\x44\x45\ap\x2\x2\x45\x46\ak\x2\x2\x46G\av\x2"+
		"\x2G\x4\x3\x2\x2\x2HI\ap\x2\x2IJ\a\x63\x2\x2JK\ao\x2\x2KL\ag\x2\x2L\x6"+
		"\x3\x2\x2\x2MN\av\x2\x2NO\ag\x2\x2OP\ao\x2\x2PQ\ar\x2\x2QR\aq\x2\x2R\b"+
		"\x3\x2\x2\x2ST\a\x63\x2\x2TU\aw\x2\x2UV\av\x2\x2VW\aj\x2\x2WX\aq\x2\x2"+
		"XY\at\x2\x2Y\n\x3\x2\x2\x2Z[\ap\x2\x2[\\\aq\x2\x2\\]\av\x2\x2]^\ag\x2"+
		"\x2^\f\x3\x2\x2\x2_`\a\x65\x2\x2`\x61\aj\x2\x2\x61\x62\aq\x2\x2\x62\x63"+
		"\at\x2\x2\x63\x64\a\x66\x2\x2\x64\xE\x3\x2\x2\x2\x65\x66\au\x2\x2\x66"+
		"g\av\x2\x2gh\ag\x2\x2hi\ar\x2\x2i\x10\x3\x2\x2\x2jk\av\x2\x2kl\at\x2\x2"+
		"lm\a\x63\x2\x2mn\ap\x2\x2no\au\x2\x2op\ar\x2\x2pq\aq\x2\x2qr\au\x2\x2"+
		"rs\ag\x2\x2s\x12\x3\x2\x2\x2tu\ar\x2\x2uv\at\x2\x2vw\aq\x2\x2wx\ar\x2"+
		"\x2xy\a\x63\x2\x2yz\ai\x2\x2z{\a\x63\x2\x2{|\av\x2\x2|}\ag\x2\x2}\x14"+
		"\x3\x2\x2\x2~\x7F\au\x2\x2\x7F\x80\av\x2\x2\x80\x81\at\x2\x2\x81\x82\a"+
		"w\x2\x2\x82\x83\ao\x2\x2\x83\x16\x3\x2\x2\x2\x84\x85\av\x2\x2\x85\x86"+
		"\ak\x2\x2\x86\x87\ao\x2\x2\x87\x88\ag\x2\x2\x88\x89\au\x2\x2\x89\x18\x3"+
		"\x2\x2\x2\x8A\x8B\a\x64\x2\x2\x8B\x8C\a\x63\x2\x2\x8C\x8D\au\x2\x2\x8D"+
		"\x8E\au\x2\x2\x8E\x1A\x3\x2\x2\x2\x8F\x90\a*\x2\x2\x90\x1C\x3\x2\x2\x2"+
		"\x91\x92\a+\x2\x2\x92\x1E\x3\x2\x2\x2\x93\x94\a}\x2\x2\x94 \x3\x2\x2\x2"+
		"\x95\x96\a\x7F\x2\x2\x96\"\x3\x2\x2\x2\x97\x98\a.\x2\x2\x98$\x3\x2\x2"+
		"\x2\x99\x9A\a\x30\x2\x2\x9A&\x3\x2\x2\x2\x9B\x9C\a=\x2\x2\x9C(\x3\x2\x2"+
		"\x2\x9D\x9E\a<\x2\x2\x9E*\x3\x2\x2\x2\x9F\xA0\a%\x2\x2\xA0,\x3\x2\x2\x2"+
		"\xA1\xA2\a]\x2\x2\xA2.\x3\x2\x2\x2\xA3\xA4\a_\x2\x2\xA4\x30\x3\x2\x2\x2"+
		"\xA5\xA7\t\x2\x2\x2\xA6\xA5\x3\x2\x2\x2\xA7\xA8\x3\x2\x2\x2\xA8\xA6\x3"+
		"\x2\x2\x2\xA8\xA9\x3\x2\x2\x2\xA9\xAA\x3\x2\x2\x2\xAA\xAB\b\x19\x2\x2"+
		"\xAB\x32\x3\x2\x2\x2\xAC\xAD\a\x31\x2\x2\xAD\xAE\a,\x2\x2\xAE\xB2\x3\x2"+
		"\x2\x2\xAF\xB1\v\x2\x2\x2\xB0\xAF\x3\x2\x2\x2\xB1\xB4\x3\x2\x2\x2\xB2"+
		"\xB3\x3\x2\x2\x2\xB2\xB0\x3\x2\x2\x2\xB3\xB5\x3\x2\x2\x2\xB4\xB2\x3\x2"+
		"\x2\x2\xB5\xB6\a,\x2\x2\xB6\xB7\a\x31\x2\x2\xB7\xB8\x3\x2\x2\x2\xB8\xB9"+
		"\b\x1A\x2\x2\xB9\x34\x3\x2\x2\x2\xBA\xBB\a\x31\x2\x2\xBB\xBC\a\x31\x2"+
		"\x2\xBC\xC0\x3\x2\x2\x2\xBD\xBF\n\x3\x2\x2\xBE\xBD\x3\x2\x2\x2\xBF\xC2"+
		"\x3\x2\x2\x2\xC0\xBE\x3\x2\x2\x2\xC0\xC1\x3\x2\x2\x2\xC1\xC3\x3\x2\x2"+
		"\x2\xC2\xC0\x3\x2\x2\x2\xC3\xC4\b\x1B\x2\x2\xC4\x36\x3\x2\x2\x2\xC5\xC7"+
		"\x5\x41!\x2\xC6\xC8\x5+\x16\x2\xC7\xC6\x3\x2\x2\x2\xC7\xC8\x3\x2\x2\x2"+
		"\xC8\xCC\x3\x2\x2\x2\xC9\xCB\x5? \x2\xCA\xC9\x3\x2\x2\x2\xCB\xCE\x3\x2"+
		"\x2\x2\xCC\xCA\x3\x2\x2\x2\xCC\xCD\x3\x2\x2\x2\xCD\x38\x3\x2\x2\x2\xCE"+
		"\xCC\x3\x2\x2\x2\xCF\xD1\a/\x2\x2\xD0\xCF\x3\x2\x2\x2\xD0\xD1\x3\x2\x2"+
		"\x2\xD1\xDF\x3\x2\x2\x2\xD2\xE0\a\x32\x2\x2\xD3\xDD\t\x4\x2\x2\xD4\xD6"+
		"\x5=\x1F\x2\xD5\xD4\x3\x2\x2\x2\xD5\xD6\x3\x2\x2\x2\xD6\xDE\x3\x2\x2\x2"+
		"\xD7\xD9\a\x61\x2\x2\xD8\xD7\x3\x2\x2\x2\xD9\xDA\x3\x2\x2\x2\xDA\xD8\x3"+
		"\x2\x2\x2\xDA\xDB\x3\x2\x2\x2\xDB\xDC\x3\x2\x2\x2\xDC\xDE\x5=\x1F\x2\xDD"+
		"\xD5\x3\x2\x2\x2\xDD\xD8\x3\x2\x2\x2\xDE\xE0\x3\x2\x2\x2\xDF\xD2\x3\x2"+
		"\x2\x2\xDF\xD3\x3\x2\x2\x2\xE0\xE2\x3\x2\x2\x2\xE1\xE3\t\x5\x2\x2\xE2"+
		"\xE1\x3\x2\x2\x2\xE2\xE3\x3\x2\x2\x2\xE3:\x3\x2\x2\x2\xE4\xE5\x5=\x1F"+
		"\x2\xE5\xE7\a\x30\x2\x2\xE6\xE8\x5=\x1F\x2\xE7\xE6\x3\x2\x2\x2\xE7\xE8"+
		"\x3\x2\x2\x2\xE8\xEC\x3\x2\x2\x2\xE9\xEA\a\x30\x2\x2\xEA\xEC\x5=\x1F\x2"+
		"\xEB\xE4\x3\x2\x2\x2\xEB\xE9\x3\x2\x2\x2\xEC<\x3\x2\x2\x2\xED\xF5\t\x6"+
		"\x2\x2\xEE\xF0\t\a\x2\x2\xEF\xEE\x3\x2\x2\x2\xF0\xF3\x3\x2\x2\x2\xF1\xEF"+
		"\x3\x2\x2\x2\xF1\xF2\x3\x2\x2\x2\xF2\xF4\x3\x2\x2\x2\xF3\xF1\x3\x2\x2"+
		"\x2\xF4\xF6\t\x6\x2\x2\xF5\xF1\x3\x2\x2\x2\xF5\xF6\x3\x2\x2\x2\xF6>\x3"+
		"\x2\x2\x2\xF7\xFA\x5\x41!\x2\xF8\xFA\t\x6\x2\x2\xF9\xF7\x3\x2\x2\x2\xF9"+
		"\xF8\x3\x2\x2\x2\xFA@\x3\x2\x2\x2\xFB\x100\t\b\x2\x2\xFC\x100\n\t\x2\x2"+
		"\xFD\xFE\t\n\x2\x2\xFE\x100\t\v\x2\x2\xFF\xFB\x3\x2\x2\x2\xFF\xFC\x3\x2"+
		"\x2\x2\xFF\xFD\x3\x2\x2\x2\x100\x42\x3\x2\x2\x2\x14\x2\xA8\xB2\xC0\xC7"+
		"\xCC\xD0\xD5\xDA\xDD\xDF\xE2\xE7\xEB\xF1\xF5\xF9\xFF\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
