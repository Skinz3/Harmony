//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Skinz\Desktop\Harmony\Harmony.Antlr\HarmonyLexer.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class HarmonyLexer : Lexer {
	public const int
		UNIT=1, ATR_NAME=2, ATR_TEMPO=3, ATR_DURATION=4, ATR_AUTHOR=5, NOTE=6, 
		CHORD=7, TRANSPOSE=8, PROPAGATE=9, ARPEGGIATE=10, PLAYWITH=11, TIMES=12, 
		LPAREN=13, RPAREN=14, LBRACE=15, RBRACE=16, COMMA=17, DOT=18, SEMI=19, 
		COLON=20, SHARP=21, FUNC=22, LBRACKET=23, RBRACKET=24, WS=25, IDENTIFIER=26, 
		DECIMAL_LITERAL=27, FLOAT_LITERAL=28;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"UNIT", "ATR_NAME", "ATR_TEMPO", "ATR_DURATION", "ATR_AUTHOR", "NOTE", 
		"CHORD", "TRANSPOSE", "PROPAGATE", "ARPEGGIATE", "PLAYWITH", "TIMES", 
		"LPAREN", "RPAREN", "LBRACE", "RBRACE", "COMMA", "DOT", "SEMI", "COLON", 
		"SHARP", "FUNC", "LBRACKET", "RBRACKET", "WS", "IDENTIFIER", "DECIMAL_LITERAL", 
		"FLOAT_LITERAL", "Digits", "LetterOrDigit", "Letter"
	};


	public HarmonyLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'unit'", "'name'", "'tempo'", "'duration'", "'author'", "'note'", 
		"'chord'", "'transpose'", "'propagate'", "'arpeggiate'", "'playWith'", 
		"'times'", "'('", "')'", "'{'", "'}'", "','", "'.'", "';'", "':'", "'#'", 
		"'->'", "'['", "']'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "UNIT", "ATR_NAME", "ATR_TEMPO", "ATR_DURATION", "ATR_AUTHOR", "NOTE", 
		"CHORD", "TRANSPOSE", "PROPAGATE", "ARPEGGIATE", "PLAYWITH", "TIMES", 
		"LPAREN", "RPAREN", "LBRACE", "RBRACE", "COMMA", "DOT", "SEMI", "COLON", 
		"SHARP", "FUNC", "LBRACKET", "RBRACKET", "WS", "IDENTIFIER", "DECIMAL_LITERAL", 
		"FLOAT_LITERAL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "HarmonyLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1E\xF6\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4"+
		"\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3"+
		"\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3"+
		"\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3"+
		"\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3"+
		"\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3"+
		"\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3"+
		"\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13"+
		"\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x18"+
		"\x3\x18\x3\x19\x3\x19\x3\x1A\x6\x1A\xB5\n\x1A\r\x1A\xE\x1A\xB6\x3\x1A"+
		"\x3\x1A\x3\x1B\x3\x1B\x5\x1B\xBD\n\x1B\x3\x1B\a\x1B\xC0\n\x1B\f\x1B\xE"+
		"\x1B\xC3\v\x1B\x3\x1C\x5\x1C\xC6\n\x1C\x3\x1C\x3\x1C\x3\x1C\x5\x1C\xCB"+
		"\n\x1C\x3\x1C\x6\x1C\xCE\n\x1C\r\x1C\xE\x1C\xCF\x3\x1C\x5\x1C\xD3\n\x1C"+
		"\x5\x1C\xD5\n\x1C\x3\x1C\x5\x1C\xD8\n\x1C\x3\x1D\x3\x1D\x3\x1D\x5\x1D"+
		"\xDD\n\x1D\x3\x1D\x3\x1D\x5\x1D\xE1\n\x1D\x3\x1E\x3\x1E\a\x1E\xE5\n\x1E"+
		"\f\x1E\xE\x1E\xE8\v\x1E\x3\x1E\x5\x1E\xEB\n\x1E\x3\x1F\x3\x1F\x5\x1F\xEF"+
		"\n\x1F\x3 \x3 \x3 \x3 \x5 \xF5\n \x2\x2\x2!\x3\x2\x3\x5\x2\x4\a\x2\x5"+
		"\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19"+
		"\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15"+
		")\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37"+
		"\x2\x1D\x39\x2\x1E;\x2\x2=\x2\x2?\x2\x2\x3\x2\v\x5\x2\v\f\xE\xF\"\"\x3"+
		"\x2\x33;\x4\x2NNnn\x3\x2\x32;\x4\x2\x32;\x61\x61\x6\x2&&\x43\\\x61\x61"+
		"\x63|\x4\x2\x2\x81\xD802\xDC01\x3\x2\xD802\xDC01\x3\x2\xDC02\xE001\x102"+
		"\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2"+
		"\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2"+
		"\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2"+
		"\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3"+
		"\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2"+
		"\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2"+
		"\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2"+
		"\x2\x2\x3\x41\x3\x2\x2\x2\x5\x46\x3\x2\x2\x2\aK\x3\x2\x2\x2\tQ\x3\x2\x2"+
		"\x2\vZ\x3\x2\x2\x2\r\x61\x3\x2\x2\x2\xF\x66\x3\x2\x2\x2\x11l\x3\x2\x2"+
		"\x2\x13v\x3\x2\x2\x2\x15\x80\x3\x2\x2\x2\x17\x8B\x3\x2\x2\x2\x19\x94\x3"+
		"\x2\x2\x2\x1B\x9A\x3\x2\x2\x2\x1D\x9C\x3\x2\x2\x2\x1F\x9E\x3\x2\x2\x2"+
		"!\xA0\x3\x2\x2\x2#\xA2\x3\x2\x2\x2%\xA4\x3\x2\x2\x2\'\xA6\x3\x2\x2\x2"+
		")\xA8\x3\x2\x2\x2+\xAA\x3\x2\x2\x2-\xAC\x3\x2\x2\x2/\xAF\x3\x2\x2\x2\x31"+
		"\xB1\x3\x2\x2\x2\x33\xB4\x3\x2\x2\x2\x35\xBA\x3\x2\x2\x2\x37\xC5\x3\x2"+
		"\x2\x2\x39\xE0\x3\x2\x2\x2;\xE2\x3\x2\x2\x2=\xEE\x3\x2\x2\x2?\xF4\x3\x2"+
		"\x2\x2\x41\x42\aw\x2\x2\x42\x43\ap\x2\x2\x43\x44\ak\x2\x2\x44\x45\av\x2"+
		"\x2\x45\x4\x3\x2\x2\x2\x46G\ap\x2\x2GH\a\x63\x2\x2HI\ao\x2\x2IJ\ag\x2"+
		"\x2J\x6\x3\x2\x2\x2KL\av\x2\x2LM\ag\x2\x2MN\ao\x2\x2NO\ar\x2\x2OP\aq\x2"+
		"\x2P\b\x3\x2\x2\x2QR\a\x66\x2\x2RS\aw\x2\x2ST\at\x2\x2TU\a\x63\x2\x2U"+
		"V\av\x2\x2VW\ak\x2\x2WX\aq\x2\x2XY\ap\x2\x2Y\n\x3\x2\x2\x2Z[\a\x63\x2"+
		"\x2[\\\aw\x2\x2\\]\av\x2\x2]^\aj\x2\x2^_\aq\x2\x2_`\at\x2\x2`\f\x3\x2"+
		"\x2\x2\x61\x62\ap\x2\x2\x62\x63\aq\x2\x2\x63\x64\av\x2\x2\x64\x65\ag\x2"+
		"\x2\x65\xE\x3\x2\x2\x2\x66g\a\x65\x2\x2gh\aj\x2\x2hi\aq\x2\x2ij\at\x2"+
		"\x2jk\a\x66\x2\x2k\x10\x3\x2\x2\x2lm\av\x2\x2mn\at\x2\x2no\a\x63\x2\x2"+
		"op\ap\x2\x2pq\au\x2\x2qr\ar\x2\x2rs\aq\x2\x2st\au\x2\x2tu\ag\x2\x2u\x12"+
		"\x3\x2\x2\x2vw\ar\x2\x2wx\at\x2\x2xy\aq\x2\x2yz\ar\x2\x2z{\a\x63\x2\x2"+
		"{|\ai\x2\x2|}\a\x63\x2\x2}~\av\x2\x2~\x7F\ag\x2\x2\x7F\x14\x3\x2\x2\x2"+
		"\x80\x81\a\x63\x2\x2\x81\x82\at\x2\x2\x82\x83\ar\x2\x2\x83\x84\ag\x2\x2"+
		"\x84\x85\ai\x2\x2\x85\x86\ai\x2\x2\x86\x87\ak\x2\x2\x87\x88\a\x63\x2\x2"+
		"\x88\x89\av\x2\x2\x89\x8A\ag\x2\x2\x8A\x16\x3\x2\x2\x2\x8B\x8C\ar\x2\x2"+
		"\x8C\x8D\an\x2\x2\x8D\x8E\a\x63\x2\x2\x8E\x8F\a{\x2\x2\x8F\x90\aY\x2\x2"+
		"\x90\x91\ak\x2\x2\x91\x92\av\x2\x2\x92\x93\aj\x2\x2\x93\x18\x3\x2\x2\x2"+
		"\x94\x95\av\x2\x2\x95\x96\ak\x2\x2\x96\x97\ao\x2\x2\x97\x98\ag\x2\x2\x98"+
		"\x99\au\x2\x2\x99\x1A\x3\x2\x2\x2\x9A\x9B\a*\x2\x2\x9B\x1C\x3\x2\x2\x2"+
		"\x9C\x9D\a+\x2\x2\x9D\x1E\x3\x2\x2\x2\x9E\x9F\a}\x2\x2\x9F \x3\x2\x2\x2"+
		"\xA0\xA1\a\x7F\x2\x2\xA1\"\x3\x2\x2\x2\xA2\xA3\a.\x2\x2\xA3$\x3\x2\x2"+
		"\x2\xA4\xA5\a\x30\x2\x2\xA5&\x3\x2\x2\x2\xA6\xA7\a=\x2\x2\xA7(\x3\x2\x2"+
		"\x2\xA8\xA9\a<\x2\x2\xA9*\x3\x2\x2\x2\xAA\xAB\a%\x2\x2\xAB,\x3\x2\x2\x2"+
		"\xAC\xAD\a/\x2\x2\xAD\xAE\a@\x2\x2\xAE.\x3\x2\x2\x2\xAF\xB0\a]\x2\x2\xB0"+
		"\x30\x3\x2\x2\x2\xB1\xB2\a_\x2\x2\xB2\x32\x3\x2\x2\x2\xB3\xB5\t\x2\x2"+
		"\x2\xB4\xB3\x3\x2\x2\x2\xB5\xB6\x3\x2\x2\x2\xB6\xB4\x3\x2\x2\x2\xB6\xB7"+
		"\x3\x2\x2\x2\xB7\xB8\x3\x2\x2\x2\xB8\xB9\b\x1A\x2\x2\xB9\x34\x3\x2\x2"+
		"\x2\xBA\xBC\x5? \x2\xBB\xBD\x5+\x16\x2\xBC\xBB\x3\x2\x2\x2\xBC\xBD\x3"+
		"\x2\x2\x2\xBD\xC1\x3\x2\x2\x2\xBE\xC0\x5=\x1F\x2\xBF\xBE\x3\x2\x2\x2\xC0"+
		"\xC3\x3\x2\x2\x2\xC1\xBF\x3\x2\x2\x2\xC1\xC2\x3\x2\x2\x2\xC2\x36\x3\x2"+
		"\x2\x2\xC3\xC1\x3\x2\x2\x2\xC4\xC6\a/\x2\x2\xC5\xC4\x3\x2\x2\x2\xC5\xC6"+
		"\x3\x2\x2\x2\xC6\xD4\x3\x2\x2\x2\xC7\xD5\a\x32\x2\x2\xC8\xD2\t\x3\x2\x2"+
		"\xC9\xCB\x5;\x1E\x2\xCA\xC9\x3\x2\x2\x2\xCA\xCB\x3\x2\x2\x2\xCB\xD3\x3"+
		"\x2\x2\x2\xCC\xCE\a\x61\x2\x2\xCD\xCC\x3\x2\x2\x2\xCE\xCF\x3\x2\x2\x2"+
		"\xCF\xCD\x3\x2\x2\x2\xCF\xD0\x3\x2\x2\x2\xD0\xD1\x3\x2\x2\x2\xD1\xD3\x5"+
		";\x1E\x2\xD2\xCA\x3\x2\x2\x2\xD2\xCD\x3\x2\x2\x2\xD3\xD5\x3\x2\x2\x2\xD4"+
		"\xC7\x3\x2\x2\x2\xD4\xC8\x3\x2\x2\x2\xD5\xD7\x3\x2\x2\x2\xD6\xD8\t\x4"+
		"\x2\x2\xD7\xD6\x3\x2\x2\x2\xD7\xD8\x3\x2\x2\x2\xD8\x38\x3\x2\x2\x2\xD9"+
		"\xDA\x5;\x1E\x2\xDA\xDC\a\x30\x2\x2\xDB\xDD\x5;\x1E\x2\xDC\xDB\x3\x2\x2"+
		"\x2\xDC\xDD\x3\x2\x2\x2\xDD\xE1\x3\x2\x2\x2\xDE\xDF\a\x30\x2\x2\xDF\xE1"+
		"\x5;\x1E\x2\xE0\xD9\x3\x2\x2\x2\xE0\xDE\x3\x2\x2\x2\xE1:\x3\x2\x2\x2\xE2"+
		"\xEA\t\x5\x2\x2\xE3\xE5\t\x6\x2\x2\xE4\xE3\x3\x2\x2\x2\xE5\xE8\x3\x2\x2"+
		"\x2\xE6\xE4\x3\x2\x2\x2\xE6\xE7\x3\x2\x2\x2\xE7\xE9\x3\x2\x2\x2\xE8\xE6"+
		"\x3\x2\x2\x2\xE9\xEB\t\x5\x2\x2\xEA\xE6\x3\x2\x2\x2\xEA\xEB\x3\x2\x2\x2"+
		"\xEB<\x3\x2\x2\x2\xEC\xEF\x5? \x2\xED\xEF\t\x5\x2\x2\xEE\xEC\x3\x2\x2"+
		"\x2\xEE\xED\x3\x2\x2\x2\xEF>\x3\x2\x2\x2\xF0\xF5\t\a\x2\x2\xF1\xF5\n\b"+
		"\x2\x2\xF2\xF3\t\t\x2\x2\xF3\xF5\t\n\x2\x2\xF4\xF0\x3\x2\x2\x2\xF4\xF1"+
		"\x3\x2\x2\x2\xF4\xF2\x3\x2\x2\x2\xF5@\x3\x2\x2\x2\x12\x2\xB6\xBC\xC1\xC5"+
		"\xCA\xCF\xD2\xD4\xD7\xDC\xE0\xE6\xEA\xEE\xF4\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
