//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Skinz\Desktop\Harmony\Harmony.Antlr\HarmonyLexer.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class HarmonyLexer : Lexer {
	public const int
		UNIT=1, ATR_NAME=2, ATR_TEMPO=3, ATR_AUTHOR=4, NOTE=5, CHORD=6, STEP=7, 
		TRANSPOSE=8, PROPAGATE=9, STRUM=10, TIMES=11, BASS=12, ADD=13, LPAREN=14, 
		RPAREN=15, LBRACE=16, RBRACE=17, COMMA=18, DOT=19, SEMI=20, COLON=21, 
		SHARP=22, LBRACKET=23, RBRACKET=24, WS=25, COMMENT=26, LINE_COMMENT=27, 
		IDENTIFIER=28, DECIMAL_LITERAL=29, FLOAT_LITERAL=30;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"UNIT", "ATR_NAME", "ATR_TEMPO", "ATR_AUTHOR", "NOTE", "CHORD", "STEP", 
		"TRANSPOSE", "PROPAGATE", "STRUM", "TIMES", "BASS", "ADD", "LPAREN", "RPAREN", 
		"LBRACE", "RBRACE", "COMMA", "DOT", "SEMI", "COLON", "SHARP", "LBRACKET", 
		"RBRACKET", "WS", "COMMENT", "LINE_COMMENT", "IDENTIFIER", "DECIMAL_LITERAL", 
		"FLOAT_LITERAL", "Digits", "LetterOrDigit", "Letter"
	};


	public HarmonyLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'unit'", "'name'", "'tempo'", "'author'", "'note'", "'chord'", 
		"'step'", "'transpose'", "'propagate'", "'strum'", "'times'", "'bass'", 
		"'add'", "'('", "')'", "'{'", "'}'", "','", "'.'", "';'", "':'", "'#'", 
		"'['", "']'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "UNIT", "ATR_NAME", "ATR_TEMPO", "ATR_AUTHOR", "NOTE", "CHORD", 
		"STEP", "TRANSPOSE", "PROPAGATE", "STRUM", "TIMES", "BASS", "ADD", "LPAREN", 
		"RPAREN", "LBRACE", "RBRACE", "COMMA", "DOT", "SEMI", "COLON", "SHARP", 
		"LBRACKET", "RBRACKET", "WS", "COMMENT", "LINE_COMMENT", "IDENTIFIER", 
		"DECIMAL_LITERAL", "FLOAT_LITERAL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "HarmonyLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2 \x107\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5"+
		"\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3"+
		"\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3"+
		"\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3"+
		"\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3"+
		"\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3"+
		"\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3"+
		"\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x6\x1A\xAD\n\x1A\r\x1A"+
		"\xE\x1A\xAE\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\a\x1B\xB7\n\x1B"+
		"\f\x1B\xE\x1B\xBA\v\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C"+
		"\x3\x1C\x3\x1C\a\x1C\xC5\n\x1C\f\x1C\xE\x1C\xC8\v\x1C\x3\x1C\x3\x1C\x3"+
		"\x1D\x3\x1D\x5\x1D\xCE\n\x1D\x3\x1D\a\x1D\xD1\n\x1D\f\x1D\xE\x1D\xD4\v"+
		"\x1D\x3\x1E\x5\x1E\xD7\n\x1E\x3\x1E\x3\x1E\x3\x1E\x5\x1E\xDC\n\x1E\x3"+
		"\x1E\x6\x1E\xDF\n\x1E\r\x1E\xE\x1E\xE0\x3\x1E\x5\x1E\xE4\n\x1E\x5\x1E"+
		"\xE6\n\x1E\x3\x1E\x5\x1E\xE9\n\x1E\x3\x1F\x3\x1F\x3\x1F\x5\x1F\xEE\n\x1F"+
		"\x3\x1F\x3\x1F\x5\x1F\xF2\n\x1F\x3 \x3 \a \xF6\n \f \xE \xF9\v \x3 \x5"+
		" \xFC\n \x3!\x3!\x5!\x100\n!\x3\"\x3\"\x3\"\x3\"\x5\"\x106\n\"\x3\xB8"+
		"\x2\x2#\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2"+
		"\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11"+
		"!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31"+
		"\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2\x2"+
		"\x41\x2\x2\x43\x2\x2\x3\x2\f\x5\x2\v\f\xE\xF\"\"\x4\x2\f\f\xF\xF\x3\x2"+
		"\x33;\x4\x2NNnn\x3\x2\x32;\x4\x2\x32;\x61\x61\x6\x2&&\x43\\\x61\x61\x63"+
		"|\x4\x2\x2\x81\xD802\xDC01\x3\x2\xD802\xDC01\x3\x2\xDC02\xE001\x115\x2"+
		"\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2"+
		"\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2"+
		"\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2"+
		"\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2"+
		"\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2"+
		"\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2"+
		"\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2"+
		"\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x3\x45\x3\x2\x2\x2\x5J\x3\x2\x2\x2"+
		"\aO\x3\x2\x2\x2\tU\x3\x2\x2\x2\v\\\x3\x2\x2\x2\r\x61\x3\x2\x2\x2\xFg\x3"+
		"\x2\x2\x2\x11l\x3\x2\x2\x2\x13v\x3\x2\x2\x2\x15\x80\x3\x2\x2\x2\x17\x86"+
		"\x3\x2\x2\x2\x19\x8C\x3\x2\x2\x2\x1B\x91\x3\x2\x2\x2\x1D\x95\x3\x2\x2"+
		"\x2\x1F\x97\x3\x2\x2\x2!\x99\x3\x2\x2\x2#\x9B\x3\x2\x2\x2%\x9D\x3\x2\x2"+
		"\x2\'\x9F\x3\x2\x2\x2)\xA1\x3\x2\x2\x2+\xA3\x3\x2\x2\x2-\xA5\x3\x2\x2"+
		"\x2/\xA7\x3\x2\x2\x2\x31\xA9\x3\x2\x2\x2\x33\xAC\x3\x2\x2\x2\x35\xB2\x3"+
		"\x2\x2\x2\x37\xC0\x3\x2\x2\x2\x39\xCB\x3\x2\x2\x2;\xD6\x3\x2\x2\x2=\xF1"+
		"\x3\x2\x2\x2?\xF3\x3\x2\x2\x2\x41\xFF\x3\x2\x2\x2\x43\x105\x3\x2\x2\x2"+
		"\x45\x46\aw\x2\x2\x46G\ap\x2\x2GH\ak\x2\x2HI\av\x2\x2I\x4\x3\x2\x2\x2"+
		"JK\ap\x2\x2KL\a\x63\x2\x2LM\ao\x2\x2MN\ag\x2\x2N\x6\x3\x2\x2\x2OP\av\x2"+
		"\x2PQ\ag\x2\x2QR\ao\x2\x2RS\ar\x2\x2ST\aq\x2\x2T\b\x3\x2\x2\x2UV\a\x63"+
		"\x2\x2VW\aw\x2\x2WX\av\x2\x2XY\aj\x2\x2YZ\aq\x2\x2Z[\at\x2\x2[\n\x3\x2"+
		"\x2\x2\\]\ap\x2\x2]^\aq\x2\x2^_\av\x2\x2_`\ag\x2\x2`\f\x3\x2\x2\x2\x61"+
		"\x62\a\x65\x2\x2\x62\x63\aj\x2\x2\x63\x64\aq\x2\x2\x64\x65\at\x2\x2\x65"+
		"\x66\a\x66\x2\x2\x66\xE\x3\x2\x2\x2gh\au\x2\x2hi\av\x2\x2ij\ag\x2\x2j"+
		"k\ar\x2\x2k\x10\x3\x2\x2\x2lm\av\x2\x2mn\at\x2\x2no\a\x63\x2\x2op\ap\x2"+
		"\x2pq\au\x2\x2qr\ar\x2\x2rs\aq\x2\x2st\au\x2\x2tu\ag\x2\x2u\x12\x3\x2"+
		"\x2\x2vw\ar\x2\x2wx\at\x2\x2xy\aq\x2\x2yz\ar\x2\x2z{\a\x63\x2\x2{|\ai"+
		"\x2\x2|}\a\x63\x2\x2}~\av\x2\x2~\x7F\ag\x2\x2\x7F\x14\x3\x2\x2\x2\x80"+
		"\x81\au\x2\x2\x81\x82\av\x2\x2\x82\x83\at\x2\x2\x83\x84\aw\x2\x2\x84\x85"+
		"\ao\x2\x2\x85\x16\x3\x2\x2\x2\x86\x87\av\x2\x2\x87\x88\ak\x2\x2\x88\x89"+
		"\ao\x2\x2\x89\x8A\ag\x2\x2\x8A\x8B\au\x2\x2\x8B\x18\x3\x2\x2\x2\x8C\x8D"+
		"\a\x64\x2\x2\x8D\x8E\a\x63\x2\x2\x8E\x8F\au\x2\x2\x8F\x90\au\x2\x2\x90"+
		"\x1A\x3\x2\x2\x2\x91\x92\a\x63\x2\x2\x92\x93\a\x66\x2\x2\x93\x94\a\x66"+
		"\x2\x2\x94\x1C\x3\x2\x2\x2\x95\x96\a*\x2\x2\x96\x1E\x3\x2\x2\x2\x97\x98"+
		"\a+\x2\x2\x98 \x3\x2\x2\x2\x99\x9A\a}\x2\x2\x9A\"\x3\x2\x2\x2\x9B\x9C"+
		"\a\x7F\x2\x2\x9C$\x3\x2\x2\x2\x9D\x9E\a.\x2\x2\x9E&\x3\x2\x2\x2\x9F\xA0"+
		"\a\x30\x2\x2\xA0(\x3\x2\x2\x2\xA1\xA2\a=\x2\x2\xA2*\x3\x2\x2\x2\xA3\xA4"+
		"\a<\x2\x2\xA4,\x3\x2\x2\x2\xA5\xA6\a%\x2\x2\xA6.\x3\x2\x2\x2\xA7\xA8\a"+
		"]\x2\x2\xA8\x30\x3\x2\x2\x2\xA9\xAA\a_\x2\x2\xAA\x32\x3\x2\x2\x2\xAB\xAD"+
		"\t\x2\x2\x2\xAC\xAB\x3\x2\x2\x2\xAD\xAE\x3\x2\x2\x2\xAE\xAC\x3\x2\x2\x2"+
		"\xAE\xAF\x3\x2\x2\x2\xAF\xB0\x3\x2\x2\x2\xB0\xB1\b\x1A\x2\x2\xB1\x34\x3"+
		"\x2\x2\x2\xB2\xB3\a\x31\x2\x2\xB3\xB4\a,\x2\x2\xB4\xB8\x3\x2\x2\x2\xB5"+
		"\xB7\v\x2\x2\x2\xB6\xB5\x3\x2\x2\x2\xB7\xBA\x3\x2\x2\x2\xB8\xB9\x3\x2"+
		"\x2\x2\xB8\xB6\x3\x2\x2\x2\xB9\xBB\x3\x2\x2\x2\xBA\xB8\x3\x2\x2\x2\xBB"+
		"\xBC\a,\x2\x2\xBC\xBD\a\x31\x2\x2\xBD\xBE\x3\x2\x2\x2\xBE\xBF\b\x1B\x2"+
		"\x2\xBF\x36\x3\x2\x2\x2\xC0\xC1\a\x31\x2\x2\xC1\xC2\a\x31\x2\x2\xC2\xC6"+
		"\x3\x2\x2\x2\xC3\xC5\n\x3\x2\x2\xC4\xC3\x3\x2\x2\x2\xC5\xC8\x3\x2\x2\x2"+
		"\xC6\xC4\x3\x2\x2\x2\xC6\xC7\x3\x2\x2\x2\xC7\xC9\x3\x2\x2\x2\xC8\xC6\x3"+
		"\x2\x2\x2\xC9\xCA\b\x1C\x2\x2\xCA\x38\x3\x2\x2\x2\xCB\xCD\x5\x43\"\x2"+
		"\xCC\xCE\x5-\x17\x2\xCD\xCC\x3\x2\x2\x2\xCD\xCE\x3\x2\x2\x2\xCE\xD2\x3"+
		"\x2\x2\x2\xCF\xD1\x5\x41!\x2\xD0\xCF\x3\x2\x2\x2\xD1\xD4\x3\x2\x2\x2\xD2"+
		"\xD0\x3\x2\x2\x2\xD2\xD3\x3\x2\x2\x2\xD3:\x3\x2\x2\x2\xD4\xD2\x3\x2\x2"+
		"\x2\xD5\xD7\a/\x2\x2\xD6\xD5\x3\x2\x2\x2\xD6\xD7\x3\x2\x2\x2\xD7\xE5\x3"+
		"\x2\x2\x2\xD8\xE6\a\x32\x2\x2\xD9\xE3\t\x4\x2\x2\xDA\xDC\x5? \x2\xDB\xDA"+
		"\x3\x2\x2\x2\xDB\xDC\x3\x2\x2\x2\xDC\xE4\x3\x2\x2\x2\xDD\xDF\a\x61\x2"+
		"\x2\xDE\xDD\x3\x2\x2\x2\xDF\xE0\x3\x2\x2\x2\xE0\xDE\x3\x2\x2\x2\xE0\xE1"+
		"\x3\x2\x2\x2\xE1\xE2\x3\x2\x2\x2\xE2\xE4\x5? \x2\xE3\xDB\x3\x2\x2\x2\xE3"+
		"\xDE\x3\x2\x2\x2\xE4\xE6\x3\x2\x2\x2\xE5\xD8\x3\x2\x2\x2\xE5\xD9\x3\x2"+
		"\x2\x2\xE6\xE8\x3\x2\x2\x2\xE7\xE9\t\x5\x2\x2\xE8\xE7\x3\x2\x2\x2\xE8"+
		"\xE9\x3\x2\x2\x2\xE9<\x3\x2\x2\x2\xEA\xEB\x5? \x2\xEB\xED\a\x30\x2\x2"+
		"\xEC\xEE\x5? \x2\xED\xEC\x3\x2\x2\x2\xED\xEE\x3\x2\x2\x2\xEE\xF2\x3\x2"+
		"\x2\x2\xEF\xF0\a\x30\x2\x2\xF0\xF2\x5? \x2\xF1\xEA\x3\x2\x2\x2\xF1\xEF"+
		"\x3\x2\x2\x2\xF2>\x3\x2\x2\x2\xF3\xFB\t\x6\x2\x2\xF4\xF6\t\a\x2\x2\xF5"+
		"\xF4\x3\x2\x2\x2\xF6\xF9\x3\x2\x2\x2\xF7\xF5\x3\x2\x2\x2\xF7\xF8\x3\x2"+
		"\x2\x2\xF8\xFA\x3\x2\x2\x2\xF9\xF7\x3\x2\x2\x2\xFA\xFC\t\x6\x2\x2\xFB"+
		"\xF7\x3\x2\x2\x2\xFB\xFC\x3\x2\x2\x2\xFC@\x3\x2\x2\x2\xFD\x100\x5\x43"+
		"\"\x2\xFE\x100\t\x6\x2\x2\xFF\xFD\x3\x2\x2\x2\xFF\xFE\x3\x2\x2\x2\x100"+
		"\x42\x3\x2\x2\x2\x101\x106\t\b\x2\x2\x102\x106\n\t\x2\x2\x103\x104\t\n"+
		"\x2\x2\x104\x106\t\v\x2\x2\x105\x101\x3\x2\x2\x2\x105\x102\x3\x2\x2\x2"+
		"\x105\x103\x3\x2\x2\x2\x106\x44\x3\x2\x2\x2\x14\x2\xAE\xB8\xC6\xCD\xD2"+
		"\xD6\xDB\xE0\xE3\xE5\xE8\xED\xF1\xF7\xFB\xFF\x105\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
