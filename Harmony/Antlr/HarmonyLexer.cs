//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Skinz\Desktop\Harmony\Harmony.Antlr\HarmonyLexer.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class HarmonyLexer : Lexer {
	public const int
		UNIT=1, ATR_NAME=2, ATR_TEMPO=3, ATR_AUTHOR=4, NOTE=5, CHORD=6, STEP=7, 
		NOTES=8, PEDAL=9, TRANSPOSE=10, PROPAGATE=11, STRUM=12, ARPEGGIO=13, TIMES=14, 
		BASS=15, ADD=16, ON=17, OFF=18, LPAREN=19, RPAREN=20, LBRACE=21, RBRACE=22, 
		COMMA=23, DOT=24, SEMI=25, COLON=26, SHARP=27, LBRACKET=28, RBRACKET=29, 
		COMMENT=30, LINE_COMMENT=31, IDENTIFIER=32, WS=33, DECIMAL_LITERAL=34, 
		FLOAT_LITERAL=35;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"UNIT", "ATR_NAME", "ATR_TEMPO", "ATR_AUTHOR", "NOTE", "CHORD", "STEP", 
		"NOTES", "PEDAL", "TRANSPOSE", "PROPAGATE", "STRUM", "ARPEGGIO", "TIMES", 
		"BASS", "ADD", "ON", "OFF", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "COMMA", 
		"DOT", "SEMI", "COLON", "SHARP", "LBRACKET", "RBRACKET", "COMMENT", "LINE_COMMENT", 
		"IDENTIFIER", "WS", "DECIMAL_LITERAL", "FLOAT_LITERAL", "Digits", "LetterOrDigit", 
		"Letter"
	};


	public HarmonyLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'unit'", "'name'", "'tempo'", "'author'", "'note'", "'chord'", 
		"'step'", "'notes'", "'pedal'", "'transpose'", "'propagate'", "'strum'", 
		"'arpeggio'", "'times'", "'bass'", "'add'", "'on'", "'off'", "'('", "')'", 
		"'{'", "'}'", "','", "'.'", "';'", "':'", "'#'", "'['", "']'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "UNIT", "ATR_NAME", "ATR_TEMPO", "ATR_AUTHOR", "NOTE", "CHORD", 
		"STEP", "NOTES", "PEDAL", "TRANSPOSE", "PROPAGATE", "STRUM", "ARPEGGIO", 
		"TIMES", "BASS", "ADD", "ON", "OFF", "LPAREN", "RPAREN", "LBRACE", "RBRACE", 
		"COMMA", "DOT", "SEMI", "COLON", "SHARP", "LBRACKET", "RBRACKET", "COMMENT", 
		"LINE_COMMENT", "IDENTIFIER", "WS", "DECIMAL_LITERAL", "FLOAT_LITERAL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "HarmonyLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2%\x12D\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x3\x2\x3\x2\x3\x2\x3"+
		"\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4"+
		"\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3"+
		"\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t"+
		"\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v"+
		"\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f"+
		"\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE"+
		"\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3"+
		"\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x11\x3\x12\x3"+
		"\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3"+
		"\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3"+
		"\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3"+
		"\x1F\x3\x1F\a\x1F\xD6\n\x1F\f\x1F\xE\x1F\xD9\v\x1F\x3\x1F\x3\x1F\x3\x1F"+
		"\x3\x1F\x3\x1F\x3 \x3 \x3 \x3 \a \xE4\n \f \xE \xE7\v \x3 \x3 \x3!\x3"+
		"!\x5!\xED\n!\x3!\a!\xF0\n!\f!\xE!\xF3\v!\x3\"\x6\"\xF6\n\"\r\"\xE\"\xF7"+
		"\x3\"\x3\"\x3#\x5#\xFD\n#\x3#\x3#\x3#\x5#\x102\n#\x3#\x6#\x105\n#\r#\xE"+
		"#\x106\x3#\x5#\x10A\n#\x5#\x10C\n#\x3#\x5#\x10F\n#\x3$\x3$\x3$\x5$\x114"+
		"\n$\x3$\x3$\x5$\x118\n$\x3%\x3%\a%\x11C\n%\f%\xE%\x11F\v%\x3%\x5%\x122"+
		"\n%\x3&\x3&\x5&\x126\n&\x3\'\x3\'\x3\'\x3\'\x5\'\x12C\n\'\x3\xD7\x2\x2"+
		"(\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13"+
		"\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2"+
		"\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A"+
		"\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2"+
		"\"\x43\x2#\x45\x2$G\x2%I\x2\x2K\x2\x2M\x2\x2\x3\x2\f\x4\x2\f\f\xF\xF\x5"+
		"\x2\v\f\xE\xF\"\"\x3\x2\x33;\x4\x2NNnn\x3\x2\x32;\x4\x2\x32;\x61\x61\x6"+
		"\x2&&\x43\\\x61\x61\x63|\x4\x2\x2\x81\xD802\xDC01\x3\x2\xD802\xDC01\x3"+
		"\x2\xDC02\xE001\x13B\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2"+
		"\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2"+
		"\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3"+
		"\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2"+
		"\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'"+
		"\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2"+
		"\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37"+
		"\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3"+
		"\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2"+
		"G\x3\x2\x2\x2\x3O\x3\x2\x2\x2\x5T\x3\x2\x2\x2\aY\x3\x2\x2\x2\t_\x3\x2"+
		"\x2\x2\v\x66\x3\x2\x2\x2\rk\x3\x2\x2\x2\xFq\x3\x2\x2\x2\x11v\x3\x2\x2"+
		"\x2\x13|\x3\x2\x2\x2\x15\x82\x3\x2\x2\x2\x17\x8C\x3\x2\x2\x2\x19\x96\x3"+
		"\x2\x2\x2\x1B\x9C\x3\x2\x2\x2\x1D\xA5\x3\x2\x2\x2\x1F\xAB\x3\x2\x2\x2"+
		"!\xB0\x3\x2\x2\x2#\xB4\x3\x2\x2\x2%\xB7\x3\x2\x2\x2\'\xBB\x3\x2\x2\x2"+
		")\xBD\x3\x2\x2\x2+\xBF\x3\x2\x2\x2-\xC1\x3\x2\x2\x2/\xC3\x3\x2\x2\x2\x31"+
		"\xC5\x3\x2\x2\x2\x33\xC7\x3\x2\x2\x2\x35\xC9\x3\x2\x2\x2\x37\xCB\x3\x2"+
		"\x2\x2\x39\xCD\x3\x2\x2\x2;\xCF\x3\x2\x2\x2=\xD1\x3\x2\x2\x2?\xDF\x3\x2"+
		"\x2\x2\x41\xEA\x3\x2\x2\x2\x43\xF5\x3\x2\x2\x2\x45\xFC\x3\x2\x2\x2G\x117"+
		"\x3\x2\x2\x2I\x119\x3\x2\x2\x2K\x125\x3\x2\x2\x2M\x12B\x3\x2\x2\x2OP\a"+
		"w\x2\x2PQ\ap\x2\x2QR\ak\x2\x2RS\av\x2\x2S\x4\x3\x2\x2\x2TU\ap\x2\x2UV"+
		"\a\x63\x2\x2VW\ao\x2\x2WX\ag\x2\x2X\x6\x3\x2\x2\x2YZ\av\x2\x2Z[\ag\x2"+
		"\x2[\\\ao\x2\x2\\]\ar\x2\x2]^\aq\x2\x2^\b\x3\x2\x2\x2_`\a\x63\x2\x2`\x61"+
		"\aw\x2\x2\x61\x62\av\x2\x2\x62\x63\aj\x2\x2\x63\x64\aq\x2\x2\x64\x65\a"+
		"t\x2\x2\x65\n\x3\x2\x2\x2\x66g\ap\x2\x2gh\aq\x2\x2hi\av\x2\x2ij\ag\x2"+
		"\x2j\f\x3\x2\x2\x2kl\a\x65\x2\x2lm\aj\x2\x2mn\aq\x2\x2no\at\x2\x2op\a"+
		"\x66\x2\x2p\xE\x3\x2\x2\x2qr\au\x2\x2rs\av\x2\x2st\ag\x2\x2tu\ar\x2\x2"+
		"u\x10\x3\x2\x2\x2vw\ap\x2\x2wx\aq\x2\x2xy\av\x2\x2yz\ag\x2\x2z{\au\x2"+
		"\x2{\x12\x3\x2\x2\x2|}\ar\x2\x2}~\ag\x2\x2~\x7F\a\x66\x2\x2\x7F\x80\a"+
		"\x63\x2\x2\x80\x81\an\x2\x2\x81\x14\x3\x2\x2\x2\x82\x83\av\x2\x2\x83\x84"+
		"\at\x2\x2\x84\x85\a\x63\x2\x2\x85\x86\ap\x2\x2\x86\x87\au\x2\x2\x87\x88"+
		"\ar\x2\x2\x88\x89\aq\x2\x2\x89\x8A\au\x2\x2\x8A\x8B\ag\x2\x2\x8B\x16\x3"+
		"\x2\x2\x2\x8C\x8D\ar\x2\x2\x8D\x8E\at\x2\x2\x8E\x8F\aq\x2\x2\x8F\x90\a"+
		"r\x2\x2\x90\x91\a\x63\x2\x2\x91\x92\ai\x2\x2\x92\x93\a\x63\x2\x2\x93\x94"+
		"\av\x2\x2\x94\x95\ag\x2\x2\x95\x18\x3\x2\x2\x2\x96\x97\au\x2\x2\x97\x98"+
		"\av\x2\x2\x98\x99\at\x2\x2\x99\x9A\aw\x2\x2\x9A\x9B\ao\x2\x2\x9B\x1A\x3"+
		"\x2\x2\x2\x9C\x9D\a\x63\x2\x2\x9D\x9E\at\x2\x2\x9E\x9F\ar\x2\x2\x9F\xA0"+
		"\ag\x2\x2\xA0\xA1\ai\x2\x2\xA1\xA2\ai\x2\x2\xA2\xA3\ak\x2\x2\xA3\xA4\a"+
		"q\x2\x2\xA4\x1C\x3\x2\x2\x2\xA5\xA6\av\x2\x2\xA6\xA7\ak\x2\x2\xA7\xA8"+
		"\ao\x2\x2\xA8\xA9\ag\x2\x2\xA9\xAA\au\x2\x2\xAA\x1E\x3\x2\x2\x2\xAB\xAC"+
		"\a\x64\x2\x2\xAC\xAD\a\x63\x2\x2\xAD\xAE\au\x2\x2\xAE\xAF\au\x2\x2\xAF"+
		" \x3\x2\x2\x2\xB0\xB1\a\x63\x2\x2\xB1\xB2\a\x66\x2\x2\xB2\xB3\a\x66\x2"+
		"\x2\xB3\"\x3\x2\x2\x2\xB4\xB5\aq\x2\x2\xB5\xB6\ap\x2\x2\xB6$\x3\x2\x2"+
		"\x2\xB7\xB8\aq\x2\x2\xB8\xB9\ah\x2\x2\xB9\xBA\ah\x2\x2\xBA&\x3\x2\x2\x2"+
		"\xBB\xBC\a*\x2\x2\xBC(\x3\x2\x2\x2\xBD\xBE\a+\x2\x2\xBE*\x3\x2\x2\x2\xBF"+
		"\xC0\a}\x2\x2\xC0,\x3\x2\x2\x2\xC1\xC2\a\x7F\x2\x2\xC2.\x3\x2\x2\x2\xC3"+
		"\xC4\a.\x2\x2\xC4\x30\x3\x2\x2\x2\xC5\xC6\a\x30\x2\x2\xC6\x32\x3\x2\x2"+
		"\x2\xC7\xC8\a=\x2\x2\xC8\x34\x3\x2\x2\x2\xC9\xCA\a<\x2\x2\xCA\x36\x3\x2"+
		"\x2\x2\xCB\xCC\a%\x2\x2\xCC\x38\x3\x2\x2\x2\xCD\xCE\a]\x2\x2\xCE:\x3\x2"+
		"\x2\x2\xCF\xD0\a_\x2\x2\xD0<\x3\x2\x2\x2\xD1\xD2\a\x31\x2\x2\xD2\xD3\a"+
		",\x2\x2\xD3\xD7\x3\x2\x2\x2\xD4\xD6\v\x2\x2\x2\xD5\xD4\x3\x2\x2\x2\xD6"+
		"\xD9\x3\x2\x2\x2\xD7\xD8\x3\x2\x2\x2\xD7\xD5\x3\x2\x2\x2\xD8\xDA\x3\x2"+
		"\x2\x2\xD9\xD7\x3\x2\x2\x2\xDA\xDB\a,\x2\x2\xDB\xDC\a\x31\x2\x2\xDC\xDD"+
		"\x3\x2\x2\x2\xDD\xDE\b\x1F\x2\x2\xDE>\x3\x2\x2\x2\xDF\xE0\a\x31\x2\x2"+
		"\xE0\xE1\a\x31\x2\x2\xE1\xE5\x3\x2\x2\x2\xE2\xE4\n\x2\x2\x2\xE3\xE2\x3"+
		"\x2\x2\x2\xE4\xE7\x3\x2\x2\x2\xE5\xE3\x3\x2\x2\x2\xE5\xE6\x3\x2\x2\x2"+
		"\xE6\xE8\x3\x2\x2\x2\xE7\xE5\x3\x2\x2\x2\xE8\xE9\b \x2\x2\xE9@\x3\x2\x2"+
		"\x2\xEA\xEC\x5M\'\x2\xEB\xED\x5\x37\x1C\x2\xEC\xEB\x3\x2\x2\x2\xEC\xED"+
		"\x3\x2\x2\x2\xED\xF1\x3\x2\x2\x2\xEE\xF0\x5K&\x2\xEF\xEE\x3\x2\x2\x2\xF0"+
		"\xF3\x3\x2\x2\x2\xF1\xEF\x3\x2\x2\x2\xF1\xF2\x3\x2\x2\x2\xF2\x42\x3\x2"+
		"\x2\x2\xF3\xF1\x3\x2\x2\x2\xF4\xF6\t\x3\x2\x2\xF5\xF4\x3\x2\x2\x2\xF6"+
		"\xF7\x3\x2\x2\x2\xF7\xF5\x3\x2\x2\x2\xF7\xF8\x3\x2\x2\x2\xF8\xF9\x3\x2"+
		"\x2\x2\xF9\xFA\b\"\x2\x2\xFA\x44\x3\x2\x2\x2\xFB\xFD\a/\x2\x2\xFC\xFB"+
		"\x3\x2\x2\x2\xFC\xFD\x3\x2\x2\x2\xFD\x10B\x3\x2\x2\x2\xFE\x10C\a\x32\x2"+
		"\x2\xFF\x109\t\x4\x2\x2\x100\x102\x5I%\x2\x101\x100\x3\x2\x2\x2\x101\x102"+
		"\x3\x2\x2\x2\x102\x10A\x3\x2\x2\x2\x103\x105\a\x61\x2\x2\x104\x103\x3"+
		"\x2\x2\x2\x105\x106\x3\x2\x2\x2\x106\x104\x3\x2\x2\x2\x106\x107\x3\x2"+
		"\x2\x2\x107\x108\x3\x2\x2\x2\x108\x10A\x5I%\x2\x109\x101\x3\x2\x2\x2\x109"+
		"\x104\x3\x2\x2\x2\x10A\x10C\x3\x2\x2\x2\x10B\xFE\x3\x2\x2\x2\x10B\xFF"+
		"\x3\x2\x2\x2\x10C\x10E\x3\x2\x2\x2\x10D\x10F\t\x5\x2\x2\x10E\x10D\x3\x2"+
		"\x2\x2\x10E\x10F\x3\x2\x2\x2\x10F\x46\x3\x2\x2\x2\x110\x111\x5I%\x2\x111"+
		"\x113\a\x30\x2\x2\x112\x114\x5I%\x2\x113\x112\x3\x2\x2\x2\x113\x114\x3"+
		"\x2\x2\x2\x114\x118\x3\x2\x2\x2\x115\x116\a\x30\x2\x2\x116\x118\x5I%\x2"+
		"\x117\x110\x3\x2\x2\x2\x117\x115\x3\x2\x2\x2\x118H\x3\x2\x2\x2\x119\x121"+
		"\t\x6\x2\x2\x11A\x11C\t\a\x2\x2\x11B\x11A\x3\x2\x2\x2\x11C\x11F\x3\x2"+
		"\x2\x2\x11D\x11B\x3\x2\x2\x2\x11D\x11E\x3\x2\x2\x2\x11E\x120\x3\x2\x2"+
		"\x2\x11F\x11D\x3\x2\x2\x2\x120\x122\t\x6\x2\x2\x121\x11D\x3\x2\x2\x2\x121"+
		"\x122\x3\x2\x2\x2\x122J\x3\x2\x2\x2\x123\x126\x5M\'\x2\x124\x126\t\x6"+
		"\x2\x2\x125\x123\x3\x2\x2\x2\x125\x124\x3\x2\x2\x2\x126L\x3\x2\x2\x2\x127"+
		"\x12C\t\b\x2\x2\x128\x12C\n\t\x2\x2\x129\x12A\t\n\x2\x2\x12A\x12C\t\v"+
		"\x2\x2\x12B\x127\x3\x2\x2\x2\x12B\x128\x3\x2\x2\x2\x12B\x129\x3\x2\x2"+
		"\x2\x12CN\x3\x2\x2\x2\x14\x2\xD7\xE5\xEC\xF1\xF7\xFC\x101\x106\x109\x10B"+
		"\x10E\x113\x117\x11D\x121\x125\x12B\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
