//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Skinz\Desktop\Harmony\Harmony.Antlr\HarmonyLexer.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class HarmonyLexer : Lexer {
	public const int
		UNIT=1, ATR_NAME=2, ATR_TEMPO=3, ATR_AUTHOR=4, NOTE=5, CHORD=6, TRANSPOSE=7, 
		PROPAGATE=8, ARPEGGIATE=9, PLAYWITH=10, TIMES=11, LPAREN=12, RPAREN=13, 
		LBRACE=14, RBRACE=15, COMMA=16, DOT=17, SEMI=18, COLON=19, SHARP=20, FUNC=21, 
		LBRACKET=22, RBRACKET=23, WS=24, IDENTIFIER=25, DECIMAL_LITERAL=26, FLOAT_LITERAL=27;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"UNIT", "ATR_NAME", "ATR_TEMPO", "ATR_AUTHOR", "NOTE", "CHORD", "TRANSPOSE", 
		"PROPAGATE", "ARPEGGIATE", "PLAYWITH", "TIMES", "LPAREN", "RPAREN", "LBRACE", 
		"RBRACE", "COMMA", "DOT", "SEMI", "COLON", "SHARP", "FUNC", "LBRACKET", 
		"RBRACKET", "WS", "IDENTIFIER", "DECIMAL_LITERAL", "FLOAT_LITERAL", "Digits", 
		"LetterOrDigit", "Letter"
	};


	public HarmonyLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'unit'", "'name'", "'tempo'", "'author'", "'note'", "'chord'", 
		"'transpose'", "'propagate'", "'arpeggiate'", "'playWith'", "'times'", 
		"'('", "')'", "'{'", "'}'", "','", "'.'", "';'", "':'", "'#'", "'->'", 
		"'['", "']'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "UNIT", "ATR_NAME", "ATR_TEMPO", "ATR_AUTHOR", "NOTE", "CHORD", 
		"TRANSPOSE", "PROPAGATE", "ARPEGGIATE", "PLAYWITH", "TIMES", "LPAREN", 
		"RPAREN", "LBRACE", "RBRACE", "COMMA", "DOT", "SEMI", "COLON", "SHARP", 
		"FUNC", "LBRACKET", "RBRACKET", "WS", "IDENTIFIER", "DECIMAL_LITERAL", 
		"FLOAT_LITERAL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "HarmonyLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1D\xEB\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x3\x2"+
		"\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6"+
		"\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b"+
		"\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t"+
		"\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n"+
		"\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f"+
		"\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3"+
		"\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3"+
		"\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x6\x19\xAA\n\x19\r\x19\xE\x19"+
		"\xAB\x3\x19\x3\x19\x3\x1A\x3\x1A\x5\x1A\xB2\n\x1A\x3\x1A\a\x1A\xB5\n\x1A"+
		"\f\x1A\xE\x1A\xB8\v\x1A\x3\x1B\x5\x1B\xBB\n\x1B\x3\x1B\x3\x1B\x3\x1B\x5"+
		"\x1B\xC0\n\x1B\x3\x1B\x6\x1B\xC3\n\x1B\r\x1B\xE\x1B\xC4\x3\x1B\x5\x1B"+
		"\xC8\n\x1B\x5\x1B\xCA\n\x1B\x3\x1B\x5\x1B\xCD\n\x1B\x3\x1C\x3\x1C\x3\x1C"+
		"\x5\x1C\xD2\n\x1C\x3\x1C\x3\x1C\x5\x1C\xD6\n\x1C\x3\x1D\x3\x1D\a\x1D\xDA"+
		"\n\x1D\f\x1D\xE\x1D\xDD\v\x1D\x3\x1D\x5\x1D\xE0\n\x1D\x3\x1E\x3\x1E\x5"+
		"\x1E\xE4\n\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x5\x1F\xEA\n\x1F\x2\x2\x2 "+
		"\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13"+
		"\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2"+
		"\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A"+
		"\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x2;\x2\x2=\x2\x2\x3\x2\v\x5\x2"+
		"\v\f\xE\xF\"\"\x3\x2\x33;\x4\x2NNnn\x3\x2\x32;\x4\x2\x32;\x61\x61\x6\x2"+
		"&&\x43\\\x61\x61\x63|\x4\x2\x2\x81\xD802\xDC01\x3\x2\xD802\xDC01\x3\x2"+
		"\xDC02\xE001\xF7\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2"+
		"\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2"+
		"\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2"+
		"\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F"+
		"\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2"+
		"\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2"+
		"\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2"+
		"\x2\x2\x3?\x3\x2\x2\x2\x5\x44\x3\x2\x2\x2\aI\x3\x2\x2\x2\tO\x3\x2\x2\x2"+
		"\vV\x3\x2\x2\x2\r[\x3\x2\x2\x2\xF\x61\x3\x2\x2\x2\x11k\x3\x2\x2\x2\x13"+
		"u\x3\x2\x2\x2\x15\x80\x3\x2\x2\x2\x17\x89\x3\x2\x2\x2\x19\x8F\x3\x2\x2"+
		"\x2\x1B\x91\x3\x2\x2\x2\x1D\x93\x3\x2\x2\x2\x1F\x95\x3\x2\x2\x2!\x97\x3"+
		"\x2\x2\x2#\x99\x3\x2\x2\x2%\x9B\x3\x2\x2\x2\'\x9D\x3\x2\x2\x2)\x9F\x3"+
		"\x2\x2\x2+\xA1\x3\x2\x2\x2-\xA4\x3\x2\x2\x2/\xA6\x3\x2\x2\x2\x31\xA9\x3"+
		"\x2\x2\x2\x33\xAF\x3\x2\x2\x2\x35\xBA\x3\x2\x2\x2\x37\xD5\x3\x2\x2\x2"+
		"\x39\xD7\x3\x2\x2\x2;\xE3\x3\x2\x2\x2=\xE9\x3\x2\x2\x2?@\aw\x2\x2@\x41"+
		"\ap\x2\x2\x41\x42\ak\x2\x2\x42\x43\av\x2\x2\x43\x4\x3\x2\x2\x2\x44\x45"+
		"\ap\x2\x2\x45\x46\a\x63\x2\x2\x46G\ao\x2\x2GH\ag\x2\x2H\x6\x3\x2\x2\x2"+
		"IJ\av\x2\x2JK\ag\x2\x2KL\ao\x2\x2LM\ar\x2\x2MN\aq\x2\x2N\b\x3\x2\x2\x2"+
		"OP\a\x63\x2\x2PQ\aw\x2\x2QR\av\x2\x2RS\aj\x2\x2ST\aq\x2\x2TU\at\x2\x2"+
		"U\n\x3\x2\x2\x2VW\ap\x2\x2WX\aq\x2\x2XY\av\x2\x2YZ\ag\x2\x2Z\f\x3\x2\x2"+
		"\x2[\\\a\x65\x2\x2\\]\aj\x2\x2]^\aq\x2\x2^_\at\x2\x2_`\a\x66\x2\x2`\xE"+
		"\x3\x2\x2\x2\x61\x62\av\x2\x2\x62\x63\at\x2\x2\x63\x64\a\x63\x2\x2\x64"+
		"\x65\ap\x2\x2\x65\x66\au\x2\x2\x66g\ar\x2\x2gh\aq\x2\x2hi\au\x2\x2ij\a"+
		"g\x2\x2j\x10\x3\x2\x2\x2kl\ar\x2\x2lm\at\x2\x2mn\aq\x2\x2no\ar\x2\x2o"+
		"p\a\x63\x2\x2pq\ai\x2\x2qr\a\x63\x2\x2rs\av\x2\x2st\ag\x2\x2t\x12\x3\x2"+
		"\x2\x2uv\a\x63\x2\x2vw\at\x2\x2wx\ar\x2\x2xy\ag\x2\x2yz\ai\x2\x2z{\ai"+
		"\x2\x2{|\ak\x2\x2|}\a\x63\x2\x2}~\av\x2\x2~\x7F\ag\x2\x2\x7F\x14\x3\x2"+
		"\x2\x2\x80\x81\ar\x2\x2\x81\x82\an\x2\x2\x82\x83\a\x63\x2\x2\x83\x84\a"+
		"{\x2\x2\x84\x85\aY\x2\x2\x85\x86\ak\x2\x2\x86\x87\av\x2\x2\x87\x88\aj"+
		"\x2\x2\x88\x16\x3\x2\x2\x2\x89\x8A\av\x2\x2\x8A\x8B\ak\x2\x2\x8B\x8C\a"+
		"o\x2\x2\x8C\x8D\ag\x2\x2\x8D\x8E\au\x2\x2\x8E\x18\x3\x2\x2\x2\x8F\x90"+
		"\a*\x2\x2\x90\x1A\x3\x2\x2\x2\x91\x92\a+\x2\x2\x92\x1C\x3\x2\x2\x2\x93"+
		"\x94\a}\x2\x2\x94\x1E\x3\x2\x2\x2\x95\x96\a\x7F\x2\x2\x96 \x3\x2\x2\x2"+
		"\x97\x98\a.\x2\x2\x98\"\x3\x2\x2\x2\x99\x9A\a\x30\x2\x2\x9A$\x3\x2\x2"+
		"\x2\x9B\x9C\a=\x2\x2\x9C&\x3\x2\x2\x2\x9D\x9E\a<\x2\x2\x9E(\x3\x2\x2\x2"+
		"\x9F\xA0\a%\x2\x2\xA0*\x3\x2\x2\x2\xA1\xA2\a/\x2\x2\xA2\xA3\a@\x2\x2\xA3"+
		",\x3\x2\x2\x2\xA4\xA5\a]\x2\x2\xA5.\x3\x2\x2\x2\xA6\xA7\a_\x2\x2\xA7\x30"+
		"\x3\x2\x2\x2\xA8\xAA\t\x2\x2\x2\xA9\xA8\x3\x2\x2\x2\xAA\xAB\x3\x2\x2\x2"+
		"\xAB\xA9\x3\x2\x2\x2\xAB\xAC\x3\x2\x2\x2\xAC\xAD\x3\x2\x2\x2\xAD\xAE\b"+
		"\x19\x2\x2\xAE\x32\x3\x2\x2\x2\xAF\xB1\x5=\x1F\x2\xB0\xB2\x5)\x15\x2\xB1"+
		"\xB0\x3\x2\x2\x2\xB1\xB2\x3\x2\x2\x2\xB2\xB6\x3\x2\x2\x2\xB3\xB5\x5;\x1E"+
		"\x2\xB4\xB3\x3\x2\x2\x2\xB5\xB8\x3\x2\x2\x2\xB6\xB4\x3\x2\x2\x2\xB6\xB7"+
		"\x3\x2\x2\x2\xB7\x34\x3\x2\x2\x2\xB8\xB6\x3\x2\x2\x2\xB9\xBB\a/\x2\x2"+
		"\xBA\xB9\x3\x2\x2\x2\xBA\xBB\x3\x2\x2\x2\xBB\xC9\x3\x2\x2\x2\xBC\xCA\a"+
		"\x32\x2\x2\xBD\xC7\t\x3\x2\x2\xBE\xC0\x5\x39\x1D\x2\xBF\xBE\x3\x2\x2\x2"+
		"\xBF\xC0\x3\x2\x2\x2\xC0\xC8\x3\x2\x2\x2\xC1\xC3\a\x61\x2\x2\xC2\xC1\x3"+
		"\x2\x2\x2\xC3\xC4\x3\x2\x2\x2\xC4\xC2\x3\x2\x2\x2\xC4\xC5\x3\x2\x2\x2"+
		"\xC5\xC6\x3\x2\x2\x2\xC6\xC8\x5\x39\x1D\x2\xC7\xBF\x3\x2\x2\x2\xC7\xC2"+
		"\x3\x2\x2\x2\xC8\xCA\x3\x2\x2\x2\xC9\xBC\x3\x2\x2\x2\xC9\xBD\x3\x2\x2"+
		"\x2\xCA\xCC\x3\x2\x2\x2\xCB\xCD\t\x4\x2\x2\xCC\xCB\x3\x2\x2\x2\xCC\xCD"+
		"\x3\x2\x2\x2\xCD\x36\x3\x2\x2\x2\xCE\xCF\x5\x39\x1D\x2\xCF\xD1\a\x30\x2"+
		"\x2\xD0\xD2\x5\x39\x1D\x2\xD1\xD0\x3\x2\x2\x2\xD1\xD2\x3\x2\x2\x2\xD2"+
		"\xD6\x3\x2\x2\x2\xD3\xD4\a\x30\x2\x2\xD4\xD6\x5\x39\x1D\x2\xD5\xCE\x3"+
		"\x2\x2\x2\xD5\xD3\x3\x2\x2\x2\xD6\x38\x3\x2\x2\x2\xD7\xDF\t\x5\x2\x2\xD8"+
		"\xDA\t\x6\x2\x2\xD9\xD8\x3\x2\x2\x2\xDA\xDD\x3\x2\x2\x2\xDB\xD9\x3\x2"+
		"\x2\x2\xDB\xDC\x3\x2\x2\x2\xDC\xDE\x3\x2\x2\x2\xDD\xDB\x3\x2\x2\x2\xDE"+
		"\xE0\t\x5\x2\x2\xDF\xDB\x3\x2\x2\x2\xDF\xE0\x3\x2\x2\x2\xE0:\x3\x2\x2"+
		"\x2\xE1\xE4\x5=\x1F\x2\xE2\xE4\t\x5\x2\x2\xE3\xE1\x3\x2\x2\x2\xE3\xE2"+
		"\x3\x2\x2\x2\xE4<\x3\x2\x2\x2\xE5\xEA\t\a\x2\x2\xE6\xEA\n\b\x2\x2\xE7"+
		"\xE8\t\t\x2\x2\xE8\xEA\t\n\x2\x2\xE9\xE5\x3\x2\x2\x2\xE9\xE6\x3\x2\x2"+
		"\x2\xE9\xE7\x3\x2\x2\x2\xEA>\x3\x2\x2\x2\x12\x2\xAB\xB1\xB6\xBA\xBF\xC4"+
		"\xC7\xC9\xCC\xD1\xD5\xDB\xDF\xE3\xE9\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
